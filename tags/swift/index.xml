<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>swift on Junu-Devlog</title>
    <link>https://junu0516.github.io/tags/swift/</link>
    <description>Recent content in swift on Junu-Devlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 24 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://junu0516.github.io/tags/swift/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>옵셔널과 옵셔널 체이닝(작성중)</title>
      <link>https://junu0516.github.io/posts/swift_optional/</link>
      <pubDate>Mon, 24 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://junu0516.github.io/posts/swift_optional/</guid>
      <description>​
스위프트의 주요 특징 중 하나인 옵셔널과 옵셔널 체이닝에 대해 정리해보았다.</description>
    </item>
    
    <item>
      <title>스위프트 클로저 개념 정리</title>
      <link>https://junu0516.github.io/posts/swift_closure/</link>
      <pubDate>Sat, 15 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://junu0516.github.io/posts/swift_closure/</guid>
      <description>​
자바를 사용하다가 스위프트를 사용하면서 체감하는 제일 큰 차이는 함수형 프로그래밍의 사용인 것 같다.</description>
    </item>
    
    <item>
      <title>스위프트로 연결리스트(Linked List) 구현하기</title>
      <link>https://junu0516.github.io/posts/linked_list_swift/</link>
      <pubDate>Fri, 14 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://junu0516.github.io/posts/linked_list_swift/</guid>
      <description>​
1. 연결리스트(Linked List)  추상형 자료형 중 리스트(List) 를 구체화 한 자료구조로, 데이터를 포함하는 노드(Node) 들이 다음(혹은 이전) 노드와 연결된 포인터를 통해 서로 연결되어 있는 형태이다.</description>
    </item>
    
  </channel>
</rss>
